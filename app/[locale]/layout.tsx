import "../globals.css";
import { NextIntlClientProvider, hasLocale } from "next-intl";
import { notFound } from "next/navigation";
import { routing } from "@/i18n/routing";
import localFont from "next/font/local";
import { Metadata } from "next";
import { global_config } from "@/constant/config";
import { QueryProvider } from "@/libs/provider";
import BaseUserInterface from "@/components/common/BaseUserInterface";
import Header from "@/components/layout/header/Header";
import PreLoading from "@/components/common/PreLoading";
import Footer from "@/components/layout/Footer";

const geistSans = localFont({
  src: "../fonts/gro-regular.otf",
  variable: "--font-geist-sans",
  weight: "100 900",
});
const geistMono = localFont({
  src: "../fonts/gro-bold.otf",
  variable: "--font-geist-mono",
  weight: "100 900",
});

export const metadata: Metadata = {
  title: global_config.tab_title,
  description: "Generated by create next app",
  icons: {
    icon: "/public/favicon.ico", // Path to your favicon
  },
};

export default async function LocaleLayout({
  children,
  params,
}: {
  children: React.ReactNode;
  params: Promise<{ locale: string }>;
}) {
  // Ensure that the incoming `locale` is valid
  const { locale } = await params;
  if (!hasLocale(routing.locales, locale)) {
    notFound();
  }

  return (
    <html
      lang={locale}
      className={`${geistSans.variable} ${geistMono.variable} antialiased`}
    >
      <head>
        <link rel="icon" href="/source/logo.png" />
      </head>
      <body>
        <NextIntlClientProvider>
          <QueryProvider>
            <BaseUserInterface>
              <Header />
              <main className=" min-h-screen">{children}</main>
              <PreLoading />
              <Footer />
            </BaseUserInterface>
          </QueryProvider>
        </NextIntlClientProvider>
      </body>
    </html>
  );
}
